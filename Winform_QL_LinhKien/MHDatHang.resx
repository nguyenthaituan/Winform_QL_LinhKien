<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>